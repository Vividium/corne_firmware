/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

/ {
    macros {
        alt_1: alt_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        alt_2: alt_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        alt_3: alt_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        alt_4: alt_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        alt_5: alt_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp N5>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        GUI_MOD {
            bindings = <&kp LEFT_GUI>;
            key-positions = <25 26>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <33 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q             &kp W               &kp E   &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O                  &kp P                 &trans
&trans  &kp A             &kp S               &kp D   &kp F  &kp G        &kp H    &kp J  &kp K      &kp L                  &kp SEMI              &trans
&trans  &mt LEFT_SHIFT Z  &mt LEFT_CONTROL X  &kp C   &kp V  &kp B        &kp N    &kp M  &kp COMMA  &mt RIGHT_CONTROL DOT  &mt RIGHT_SHIFT FSLH  &trans
                                              &trans  &mo 1  &kp SPACE    &kp RET  &mo 2  &trans
            >;
        };

        Numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans        &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans    &trans        &trans  &trans
            >;
        };

        Symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT    &kp HASH      &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS       &kp ASTRK  &kp LPAR   &kp RPAR          &trans
&trans  &trans    &trans    &kp UP_ARROW  &trans     &trans       &kp MINUS  &kp EQUAL      &kp LBKT   &kp RBKT   &kp BSLH          &trans
&trans  &trans    &kp LEFT  &kp DOWN      &kp RIGHT  &trans       &trans     &kp BACKSPACE  &trans     &kp GRAVE  &kp SINGLE_QUOTE  &trans
                            &trans        &trans     &trans       &trans     &trans         &trans
            >;
        };

        Util {
            bindings = <
&trans  &alt_1      &alt_2      &alt_3             &alt_4            &alt_5               &trans  &trans          &mkp MB3        &trans           &trans          &trans
&trans  &trans      &trans      &kp C_VOLUME_UP    &trans            &ext_power EP_ON     &trans  &mkp MB1        &mmv MOVE_UP    &mkp MB2         &msc SCRL_UP    &trans
&trans  &bt BT_PRV  &bt BT_NXT  &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &ext_power EP_OFF    &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &soft_off
                                &trans             &trans            &trans               &trans  &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Top_Layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

&led_strip { chain-length = <6>; };
